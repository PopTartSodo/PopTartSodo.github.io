<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Available Function Listing</title>
      <link href="/2024/05/09/Available%20Function%20Listing/"/>
      <url>/2024/05/09/Available%20Function%20Listing/</url>
      
        <content type="html"><![CDATA[<h2 id="From-AppDeployToolkit"><a href="#From-AppDeployToolkit" class="headerlink" title="From AppDeployToolkit"></a>From AppDeployToolkit</h2><table><thead><tr><th>Name</th><th>Synopsis</th><th>Name</th><th>Synopsis</th></tr></thead><tbody><tr><td><code>Execute-MSP</code></td><td>Reads SummaryInfo targeted product codes in MSP file and determines if the MSP file applies to any installed products.</td><td><code>Write-Log</code></td><td>Write messages to a log file in CMTrace.exe compatible format or Legacy text file format.  <!--one line --></td></tr><tr><td><code>New-ZipFile</code></td><td>Create a new zip archive or add content to an existing archive.</td><td><code>Exit-Script</code></td><td>Exit the script, perform cleanup actions, and pass an exit code to the parent process.</td></tr><tr><td><code>Resolve-Error</code></td><td>Enumerate error record details.</td><td><code>Show-InstallationPrompt</code></td><td>Displays a custom installation prompt with the toolkit branding and optional buttons.  <!--one line --></td></tr><tr><td><code>Show-DialogBox</code></td><td>Display a custom dialog box with optional title, buttons, icon and timeout.</td><td><code>Get-HardwarePlatform</code></td><td>Retrieves information about the hardware platform (physical or virtual)</td></tr><tr><td><code>Get-FreeDiskSpace</code></td><td>Retrieves the free disk space in MB on a particular drive (defaults to system drive)</td><td><code>Get-InstalledApplication</code></td><td>Retrieves information about installed applications.</td></tr><tr><td><code>Execute-MSI</code></td><td>Executes msiexec.exe to perform the following actions for MSI &amp; MSP files and MSI product codes: install, uninstall, patch, repair, active setup.</td><td><code>Remove-MSIApplications</code></td><td>Removes all MSI applications matching the specified application name.</td></tr><tr><td><code>Test-RegistryValue</code></td><td>Test if a registry value exists.</td><td><code>Get-RegistryKey</code></td><td>Retrieves value names and value data for a specified registry key or optionally, a specific value.</td></tr><tr><td><code>Set-RegistryKey</code></td><td>Creates a registry key name, value, and value data; it sets the same if it already exists.</td><td><code>Remove-RegistryKey</code></td><td>Deletes the specified registry key or value.</td></tr><tr><td><code>Invoke-HKCURegistrySettingsForAllUsers</code></td><td>Set current user registry settings for all current users and any new users in the future.</td><td><code>ConvertTo-NTAccountOrSID</code></td><td>Convert between NT Account names and their security identifiers (SIDs).</td></tr><tr><td><code>Get-UserProfiles</code></td><td>Get the User Profile Path, User Account Sid, and the User Account Name for all users that log onto the machine and also the Default User (which does not log on).</td><td><code>Get-FileVersion</code></td><td>Gets the version of the specified file</td></tr><tr><td><code>New-Shortcut</code></td><td>Creates a new .lnk or .url type shortcut</td><td><code>Execute-ProcessAsUser</code></td><td>Execute a process with a logged in user account, by using a scheduled task, to provide interaction with user in the SYSTEM context.</td></tr><tr><td><code>Update-Desktop</code></td><td>Refresh the Windows Explorer Shell, which causes the desktop icons and the environment variables to be reloaded.</td><td><code>Update-SessionEnvironmentVariables</code></td><td>Updates the environment variables for the current PowerShell session with any environment variable changes that may have occurred during script execution.</td></tr><tr><td><code>Get-ScheduledTask</code></td><td>Retrieve all details for scheduled tasks on the local computer.</td><td><code>Block-AppExecution</code></td><td>Block the execution of an application(s)</td></tr><tr><td><code>Unblock-AppExecution</code></td><td>Unblocks the execution of applications performed by the Block-AppExecution function</td><td><code>Get-DeferHistory</code></td><td>Get the history of deferrals from the registry for the current application, if it exists.</td></tr><tr><td><code>Set-DeferHistory</code></td><td>Set the history of deferrals in the registry for the current application.</td><td><code>Get-UniversalDate</code></td><td>Returns the date&#x2F;time for the local culture in a universal sortable date time pattern.</td></tr><tr><td><code>Get-RunningProcesses</code></td><td>Gets the processes that are running from a custom list of process objects and also adds a property called ProcessDescription.</td><td><code>Show-InstallationWelcome</code></td><td>Show a welcome dialog prompting the user with information about the installation and actions to be performed before the installation can begin.</td></tr><tr><td><code>Show-WelcomePrompt</code></td><td>Called by Show-InstallationWelcome to prompt the user to optionally do the following:  1. Close the specified running applications.  2. Provide an option to defer the installation.  3. Show a countdown before applications are automatically closed.</td><td><code>Show-InstallationRestartPrompt</code></td><td>Displays a restart prompt with a countdown to a forced restart.</td></tr><tr><td><code>Show-BalloonTip</code></td><td>Displays a balloon tip notification in the system tray.</td><td><code>Show-InstallationProgress</code></td><td>Displays a progress dialog in a separate thread with an updateable custom message.</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Powershell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Powershell </tag>
            
            <tag> AppDeployToolkit </tag>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel Function Recording</title>
      <link href="/2024/05/09/ExcelFuncton/"/>
      <url>/2024/05/09/ExcelFuncton/</url>
      
        <content type="html"><![CDATA[<h2 id="Extract-Group-in-cell"><a href="#Extract-Group-in-cell" class="headerlink" title="Extract Group in cell"></a>Extract Group in cell</h2><p><code>=IF(ISNUMBER(SEARCH(&quot; : Users&quot;,D2)),&quot;Users&quot;,IF(ISNUMBER(SEARCH(&quot;Everyone&quot;,D2)),&quot;Everyone&quot;,&quot;Authenticated Users&quot;))</code>   </p><h2 id="Extract-Path-in-cell"><a href="#Extract-Path-in-cell" class="headerlink" title="Extract Path in cell"></a>Extract Path in cell</h2><p><code>=MID(B9,FIND(&quot;Path :&quot;,B9)+LEN(&quot;Path :&quot;),FIND(&quot;Used by services&quot;,B9)-FIND(&quot;Path :&quot;,B9)-LEN(&quot;Path :&quot;))</code></p><ul><li>Only extract the path that includes three “&quot;, decrease to two if do not have it<br><code>=IFERROR(MID(D3,1,FIND(&quot;\&quot;,D3,FIND(&quot;\&quot;,D3,FIND(&quot;\&quot;,D3)+1)+1)),MID(D3,1,FIND(&quot;\&quot;,D3,FIND(&quot;\&quot;,D3)+1)))</code></li><li>Click “Data” , then will find “Text to Columns”. It will separate each field, only need 3 fields.</li><li>New a pivot table to calculate data.(Control Columns A:I )</li><li><strong>Required: DNS Name, Plugin Output</strong></li></ul><hr><h3 id="Extract-Path-except-for-filename"><a href="#Extract-Path-except-for-filename" class="headerlink" title="Extract Path except for filename"></a>Extract Path except for filename</h3><blockquote><p><code>=LEFT(D2,FIND(CHAR(1),SUBSTITUTE(D2,&quot;\&quot;,CHAR(1),LEN(D2)-LEN(SUBSTITUTE(D2,&quot;\&quot;,&quot;&quot;))))-1)</code>**<br><strong>i. <code>left(text, num_chars)</code></strong></p><ul><li>text: required. The text string that contains the characters you want to extract.</li><li>num_chars: optional. Specifies the number of characters you want left to extract.<br><strong>ii. <code>find(find_text, within_text, [start_num])</code></strong>  </li><li>find_text: required. The text you want to find.  </li><li>within_text: required. The text containing the text you want to find.  </li><li>start_num: option. Specifies the character at which to start the search. The first character in within_text is character number 1. if you omit start_num, it is assumed to be 1.<br><strong>iii.<code>substitute(text, old_text, new_text, [instance_num])</code></strong>  </li><li>text: required. The text or the reference to a cell containing text for which you want to substitute characters.  </li><li>old_text: required. The text you want to replace.  </li><li>new_text: required. The Text you want to replace old_text with.  </li><li>instance_num: optional. Specifics which occurrence of old_text you want to replace with new_text. If you specify instance_num, only that instance of old_text is replaced. Otherwise, every occurrence of old_text in text is changed to new_text.<br><strong>iv. <code>len(text) </code></strong>  </li><li>Text: required. The text whose length you want to find. Space count as characters.</li></ul></blockquote><h3 id="Combine-content-of-cells"><a href="#Combine-content-of-cells" class="headerlink" title="Combine content of cells"></a>Combine content of cells</h3><blockquote><p><strong>a. <code>=TEXTJOIN(&quot;,&quot;,TRUE,K1:K10)</code></strong><br><strong>i. <code>textjoin(delimiter, ignore_empty, text1)</code></strong>  </p><ul><li>Delimiter: required. A text string, either empty, or one or more characters enclosed by double quotes, or a reference to a valid text string. If a number is supplied, it will be treated as text.</li><li>Ignore_empty: if true, ignores empty cells.</li><li>Text1: required. Text item to be joined. A text string, or array of strings, such as a range of cells.</li></ul></blockquote><hr><h2 id="xLookup"><a href="#xLookup" class="headerlink" title="xLookup"></a>xLookup</h2><pre><code>=XLOOKUP(lookup_value,lookup_array,return_array, [if_not_found], [match_mode], [search_mode]) </code></pre><blockquote><p><em><strong>参数说明</strong></em><br>lookup_value：查找值(必填项)<br>lookup_array：要搜索的数组或区域(必填项)<br>return_array：要返回的数组或区域(必填项)<br>[if_not_found]：如果找不到有效的匹配项，则返回你提供的[if_not_found]文本；如果找不到有效的匹配项，并且缺少[if_not_found]，则会返回#N&#x2F;A(选填项)<br>[match_mode]：指定匹配类型。 </p><blockquote><p>0表示完全匹配，如果未找到，则返回<code>#N/A</code>，这是默认选项；<br>-1表示完全匹配，如果没有找到，则返回下一个较小的项；<br>1表示完全匹配，如果没有找到，则返回下一个较大的项；<br>2表示通配符匹配，其中<code>*</code>、<code>？</code>、<code>~</code>有特殊含义。 </p></blockquote><p>[search_mode]：指定要使用的搜索模式。(选填项) </p><blockquote><p>1表示从第一项开始搜索，这是默认选项；<br>-1表示从最后一项开始执行反向搜索；<br>2表示执行依赖于lookup_array按升序排序的二进制搜索，如果未排序，将返回无效结果；<br>-2表示执行依赖于lookup_array按降序排序的二进制搜索，如果未排序，将返回无效结果。 </p></blockquote><p><em><strong>通配符解释</strong></em><br>通配符一般使用在Excel查找和替换中，将通配符用作文本筛选器的比较条件，并在搜索和替换内容时使用通配符字符。<br>常用通配符有三个，分别是<code>？</code>(问号)、<code>*</code>(星号)、<code>~</code>(波形符)。 </p><blockquote><p><code>？</code>(问号)表示任意单个字符，例如A？就表示以A开头的任意两个字符；<br><code>*</code>(星号)表示任意数量的字符，例如<code>*A*</code>就表示含有字符A的任意一个字符串，<code>*A</code>就表示以字符A结尾的任意一个字符串，<code>A*</code>就表示以字符A开头的任意一个字符串；<br><code>~</code>(波形符)即转义字符，通常后跟？、<code>*</code>或者<code>~</code>，表示<code>~</code>后面的字符为普通字符，例如<code>A~？</code>表示查找字符串<code>A？</code>。 </p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel VBA</title>
      <link href="/2024/05/09/ExcelVBA/"/>
      <url>/2024/05/09/ExcelVBA/</url>
      
        <content type="html"><![CDATA[<h3 id="解读VBA-Script"><a href="#解读VBA-Script" class="headerlink" title="解读VBA Script"></a>解读VBA Script</h3><blockquote><p>Sub 过程是一系列 Visual Basic 语句，由 Sub 语句和 End Sub 语句括起来，这些语句执行操作但不返回值。 Sub 过程可采用参数，例如通过调用过程传递的常量、变量或表达式。 如果 Sub 过程没有参数，则 Sub 语句必须包括一组空括号。</p></blockquote><pre><code> Sub sendMail()    Dim OutlookApp As Object    Dim OutlookMail As Object    Dim lastRow As Long    Dim i As Long    &#39; 创建Outlook应用程序    Set OutlookApp = CreateObject(&quot;Outlook.Application&quot;)    &#39; 获取工作表    Dim ws As Worksheet    Set ws = ThisWorkbook.Sheets(&quot;Sheet1&quot;) &#39; 修改为您的工作表名称    &#39; 获取最后一行    lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row    &#39; 循环发送邮件    For i = 2 To lastRow &#39; 假设第一行是标题，数据从第二行开始        &#39; 创建新邮件        Set OutlookMail = OutlookApp.CreateItem(0)        &#39; 设置收件人、抄送、主题和正文        OutlookMail.To = ws.Cells(i, 1).Value &#39; 收件人列        OutlookMail.CC = ws.Cells(i, 2).Value &#39; 抄送列        OutlookMail.Subject = ws.Cells(i, 3).Value &#39; 主题列        OutlookMail.Body = ws.Cells(i, 4).Value &#39; 正文列        &#39; 发送邮件        OutlookMail.Send        &#39; 释放对象        Set OutlookMail = Nothing    Next i    &#39; 释放Outlook应用程序对象    Set OutlookApp = NothingEnd Sub</code></pre><blockquote><p>DIM就是定义一个变量，第一个就是把OutlookApp（自定义）的变成object的数据类型。也就是通俗一点，把A定义成动物。电脑会识别A为动物。</p></blockquote><pre><code>Dim OutlookApp As ObjectDim OutlookMail As ObjectDim lastRow As LongDim i As Long</code></pre><blockquote><p>创建Outlook应用程序，类似于打开Outlook</p></blockquote><pre><code>Set OutlookApp = CreateObject(&quot;Outlook.Application&quot;)</code></pre><blockquote><p>1.获取工作簿<br>2.修改为工作簿里sheet的名称 </p></blockquote><pre><code>Dim ws As WorksheetSet ws = ThisWorkbook.Sheets(&quot;Sheet1&quot;) &#39;</code></pre><blockquote><p>获取工作簿中的最后一行，固定搭配</p></blockquote><pre><code>lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row</code></pre><h4 id="For循环解读"><a href="#For循环解读" class="headerlink" title="For循环解读:"></a>For循环解读:</h4><blockquote><p>1.for i&#x3D;2 to lastRow  i就是一个变量 从下文理解就是 i&#x3D;行，To lastRow 就是循环从第二行到最后一行。<br>2.Set OutlookMail &#x3D; OutlookApp.CreateItem(0)创建新邮件。<br>3.从OutlookMail.**&lt;Outlook里的item项&gt;**，就比如说发件人那就是outlookmail.sender；然后ws.Cells(i,1).value就是上面自定义的变量ws也就是你上面发给我的excel，也就是读取第二行第一列的值作为收件人。<br>4.outlookmail.send 就是发送邮件，固定搭配 ，有官方文档可以参考。<br>5.发送完之后需要释放被占用的对象，所以需要写一句        Set OutlookMail &#x3D; Nothing<br>6.最后for循环结尾 Next i 意思就是换行继续执行以上操作，直到excel的最后一行。  </p></blockquote><pre><code>For i = 2 To lastRow &#39; 假设第一行是标题，数据从第二行开始    &#39; 创建新邮件    Set OutlookMail = OutlookApp.CreateItem(0)   &#39; 0表示邮件    &#39; 设置收件人、抄送、主题和正文    OutlookMail.To = ws.Cells(i, 1).Value &#39; 收件人列    OutlookMail.CC = ws.Cells(i, 2).Value &#39; 抄送列    OutlookMail.Subject = ws.Cells(i, 3).Value &#39; 主题列    OutlookMail.Body = ws.Cells(i, 4).Value &#39; 正文列    &#39; 发送邮件    OutlookMail.Send    &#39; 释放对象    Set OutlookMail = NothingNext i</code></pre><blockquote><p>1.全部发送完，比如16个都发送完毕，则会退出for循环，此时我们的目的已经达到，所以我们需要释放被占用的对象，也就是application<br>2.固定搭配 End Sub 一个程序语句的结尾 一般是写完Sub xxx()后 立马要补充End Sub</p></blockquote><pre><code>    &#39; 释放Outlook应用程序对象    Set OutlookApp = NothingEnd Sub</code></pre><hr><h3 id="在Excel里创建按钮"><a href="#在Excel里创建按钮" class="headerlink" title="在Excel里创建按钮"></a>在Excel里创建按钮</h3><blockquote><p>1.打开”开发人员”选项卡，选择”插入”-&gt;”按钮(ActiveX控件)”，然后在工作簿上绘制一个按钮<br>2.创建按钮后，双击按钮以打开代码编辑器。将以下代码复制并粘贴到按钮的Click事件(点击后会发生的事情)中：</p></blockquote><pre><code>Private Sub CommandButton1_Click()  sendMailEnb Sub</code></pre><blockquote><p>返回工作簿点击按钮进行测试。</p></blockquote><blockquote><p>参考博客：<a href="https://blog.csdn.net/QingYuanve/article/details/131440152">在VBA中，使用Outlook对象库可以访问和操作Outlook应用程序中的邮件项</a><br>官方文档：<a href="https://learn.microsoft.com/zh-cn/office/vba/api/overview/">Office VBA 参考</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> VBA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo部署Github Page</title>
      <link href="/2024/05/09/Hexo-Github/"/>
      <url>/2024/05/09/Hexo-Github/</url>
      
        <content type="html"><![CDATA[<p>##搭建前准备<br>部署设备：MacBook Pro</p><ol><li>安装Homebrew</li></ol><pre><code class="bash">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</code></pre><ol start="2"><li>安装环境</li></ol><pre><code class="bash">#安装Gitbrew install git#安装nodebrew install node#安装Hexo 因为是macOS需要在命令前添加sudosudo npm install -g hexo-cli#初始化hexo init &lt;blog&gt;   #blog可自定义cd &lt;blog&gt;npm install#检查是否安装成功node -vgit --versionhexo -v</code></pre><ol start="3"><li>本地Hexo关联远程Github仓库</li></ol><pre><code class="bash"># 常用命令hexo c    #清理缓存hexo g    #生成hexo d    #发布hexo s    #本地预览#git config --global user.name &quot;username&quot;git config --global user.email &quot;email&quot;#验证查看是否有输出git config user.namegit config user.emailssh-keygen -t rsa -C &quot;email&quot;#获取sshcd /Users/user/.ssh/vim id_rsa.pub #复制ssh至下述步骤4</code></pre><blockquote><p>注意hexo d时需要输入username和password，password输入的是步骤3中的token<br>4. github中个人资料Settings中「SSH and GPG keys」，「New SSH key」权限避免出现不够的情况，可以全选<br><img src="/assets/img/github-ssh.png" alt="这是图片" title="github-ssh"><br>5. 更改配置文件</p></blockquote><pre><code class="bash">cd ~/&lt;blog&gt;vim _config.yml #########需要修改以下内容# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: git  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git  branch: master# URL## Set your site url here. For example, if you use GitHub Page, set url as &#39;https://username.github.io/project&#39;url: https://&lt;username&gt;.github.io#########需要修改以上内容#推送到githubsudo npm install hexo-deployer-git --savehexo cleanhexo d</code></pre><ol start="6"><li>访问github.io查看效果<br><img src="/assets/img/githubSite.png" alt="这是图片" title="githubSite"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kanto Area Trave Guide 6 Days</title>
      <link href="/2024/05/09/Kanto%20Area%20Trave%20Guide%206%20Days/"/>
      <url>/2024/05/09/Kanto%20Area%20Trave%20Guide%206%20Days/</url>
      
        <content type="html"><![CDATA[<h2 id="机票-酒店"><a href="#机票-酒店" class="headerlink" title="机票&amp;酒店"></a>机票&amp;酒店</h2><blockquote><p>出发时间-归来时间：06月01日-06月06日（暂定） 机票：1990<br>民宿:2853<br>地址：8-chōme-19-11 Nishishinjuku, Shinjuku City, 东京 160-0023, 日本</p></blockquote><hr><h2 id="必备物品"><a href="#必备物品" class="headerlink" title="必备物品"></a>必备物品</h2><blockquote><p>兑换日元：2800<br>预计交通费：500<br>Shibuya Sky:105<br>日本上网流量卡:18<br>迪士尼门票:375</p></blockquote><h2 id="需要下载的App"><a href="#需要下载的App" class="headerlink" title="需要下载的App"></a>需要下载的App</h2><blockquote><p>交通：Google Maps<br>餐饮：Tabelog&#x2F;Retty<br>翻译：Google 翻译&#x2F;Voicetra<br>迪士尼：Tokyo Disney Resort App   </p></blockquote><hr><h2 id="打卡美食"><a href="#打卡美食" class="headerlink" title="打卡美食"></a>打卡美食</h2><ul><li><input disabled="" type="checkbox"> 拉面: 油そば  -  东京西新宿 【周日营业至22点, 平日营业至凌晨4点】<blockquote><p>吃法推荐：面上来之后，先淋2-4圈醋，2-4圈辣油。然后搅拌均匀。之后，撒上 1&#x2F;3-1&#x2F;4盒洋葱末</p></blockquote></li><li><input disabled="" type="checkbox"> 甜甜圈: I’m Donut - 东京涩谷&#x2F;表参道&#x2F;原宿</li><li><input disabled="" type="checkbox"> 寿司: Umegaoka Sushinomidori Shibuya - 东京涩谷 【可预约 - <a href="https://www.tablecheck.com/zh-CN/shops/sushinomidori-shibuya/reserve%E3%80%91">https://www.tablecheck.com/zh-CN/shops/sushinomidori-shibuya/reserve】</a></li><li><input disabled="" type="checkbox"> 和牛&#x2F;鳗鱼三明治: Ginza sand - 东京银座</li><li><input disabled="" type="checkbox"> 秋叶原牛奶: ミルクスタンド - 东京秋叶原</li><li><input disabled="" type="checkbox"> 拉面: 一兰拉面Ichiran Ramen - 东京涩谷&#x2F;新宿</li><li><input disabled="" type="checkbox"> 咖啡【可打卡东京塔】: Hills House - 东京麻布台之丘  森JP Tower</li><li><input disabled="" type="checkbox"> 和风定食: Cafe Yoridokoro -镰仓稻村崎 【7:00-9:00; 11:00-17:00】</li><li><input disabled="" type="checkbox"> Brunch: ダブルドアーズDouble Doors・NAVY </li><li><input disabled="" type="checkbox"> 汤咖喱: Asian Bar RAMAI - 横滨关内</li></ul><hr><h2 id="日程规划"><a href="#日程规划" class="headerlink" title="日程规划"></a>日程规划</h2><h3 id="Day-1-上海东京-06月01日星期六"><a href="#Day-1-上海东京-06月01日星期六" class="headerlink" title="Day 1 上海东京 06月01日星期六"></a>Day 1 上海东京 <strong>06月01日星期六</strong></h3><blockquote><p>8:20-12:10 成田T1-浦东T2</p></blockquote><h3 id="Day-2-镰仓横滨-06月02日星期日"><a href="#Day-2-镰仓横滨-06月02日星期日" class="headerlink" title="Day 2 镰仓横滨  06月02日星期日"></a>Day 2 镰仓横滨  <strong>06月02日星期日</strong></h3><font size=3>可购买江之电一日券(800日元)<br/> 江之电220日元/程<br/> 新宿->镰仓高校 ：1.5h<br/> 镰仓【9点出发-5.8h】<br/> (总耗时4.3h)  <br/> 1.镰仓高校(灌篮高手打卡点)(30min)  <br/> 2.七里滨(2pm前打卡海边富士山)(可步行至下一站)(60min)  <br/> &nbsp;&nbsp;备选：Double Doors NAVY【10:30–21:00】  <br/> 3.稻村崎站(90min)  <br/> 午餐：Cafe Yoridokoro(カフェ ヨリドコロ)  <br/> &nbsp;&nbsp;早餐时间：7:00-9:00  <br/> &nbsp;&nbsp;午餐时间：11:00-17:00  <br/> &nbsp;&nbsp;靠窗：テラス席お願いします  <br/> 4.长谷寺(门票400日元)(90min)  <br/> </font><hr><font size=3 face="微软雅黑">镰仓->横滨  ： 1.1h <br/> 横滨【预计16.30到达】  <br/> 可体验：城市缆车(1000单程 20min)  <br/> 晚餐：Asian Bar RAMAI (汤咖喱)  <br/> 花火PlanA：(臨港パーク内)横滨【主会场附近也有很大一片可以免费观看的地方，每年人都很多！】  <br/> 花火PlanB：(山下公园)横滨【场地大，感觉不出人多，有草坪可以坐，中华街吃完饭溜达到山下公园，正好看花火🎆】  <br/> &nbsp;&nbsp;开始时间：19：25-19：55  <br/> 返程  <br/> &nbsp;&nbsp;可打卡横滨高岛屋店Echire  <br/> &nbsp;&nbsp;&nbsp;黄油饼干、黄油奶油派  <br/>  </font><h3 id="Day-3-东京市区-06月03日星期一"><a href="#Day-3-东京市区-06月03日星期一" class="headerlink" title="Day 3 东京市区 06月03日星期一"></a>Day 3 东京市区 <strong>06月03日星期一</strong></h3><blockquote><p>CityWalk区域CD(东京塔，涩谷，根津美术馆)<br>18:00 Shibuya Sky </p></blockquote><h3 id="Day-4-东京山梨-06月04日星期二"><a href="#Day-4-东京山梨-06月04日星期二" class="headerlink" title="Day 4 东京山梨 06月04日星期二"></a>Day 4 东京山梨 <strong>06月04日星期二</strong></h3><font size=3>新宿-高速巴士往返4400日元，提前在【Highway Bus中文网站-https://highway-buses.jp/chs/】订票@河口湖巴士周游券(1700日元)-需了解【下吉田】日川时计店 - 可不去  富士山面包店:FUJISAN SNOKUPAN新仓山浅间神社  下吉田-河口湖坐车20分钟河口湖(天鹅船、游艇、索道) - 优先打卡  河口湖站:  天妇罗：冨士天ぷら いだ天【10:00–23:00】  铁板烧:Tetsuyaki【12:00–14:00; 17:00–21:30】大石公园  咖啡:BRAND NEW DAY</font><h3 id="Day-5-东京市区-06月05日星期三"><a href="#Day-5-东京市区-06月05日星期三" class="headerlink" title="Day 5 东京市区 06月05日星期三"></a>Day 5 东京市区 <strong>06月05日星期三</strong></h3><font size=3>Disney Sea </font><h3 id="Day-6-上海东京-06月06日星期四"><a href="#Day-6-上海东京-06月06日星期四" class="headerlink" title="Day 6 上海东京 06月06日星期四"></a>Day 6 上海东京 <strong>06月06日星期四</strong></h3><blockquote><p>13:25-15:30 东京T1-上海T2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Travel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Travel </tag>
            
            <tag> Japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Osaka-Tokyo Trave Guide 7 Days</title>
      <link href="/2024/05/09/Osaka-Tokyo%20Trave%20Guide%207%20Days/"/>
      <url>/2024/05/09/Osaka-Tokyo%20Trave%20Guide%207%20Days/</url>
      
        <content type="html"><![CDATA[<h2 id="机票-酒店"><a href="#机票-酒店" class="headerlink" title="机票&amp;酒店"></a>机票&amp;酒店</h2><blockquote><p>出发时间-归来时间：5月16日-5月22日（暂定） 机票：3410<br>新干线:700<br>民宿:2500<br>大阪-心斋桥&#x2F;道顿堀 5月16日-5月20日<br>东京 东京站&#x2F;新宿站 5月20日-5月22日</p></blockquote><hr><h2 id="必备物品"><a href="#必备物品" class="headerlink" title="必备物品"></a>必备物品</h2><blockquote><p>兑换日元：4000<br>预计交通费：420<br>大阪周游卡（待定）<br>日本上网流量卡：18<br>环球影城门票&amp;4项快速通行【小黄人】：1424<br>迪士尼门票：588</p></blockquote><h2 id="需要下载的App"><a href="#需要下载的App" class="headerlink" title="需要下载的App"></a>需要下载的App</h2><blockquote><p>交通：Google Maps<br>餐饮：Tabelog&#x2F;Retty<br>翻译：Google 翻译&#x2F;Voicetra<br>迪士尼：Tokyo Disney Resort App<br>环球影城USJ：USJ（绑定门票）    </p></blockquote><hr><h2 id="打卡美食"><a href="#打卡美食" class="headerlink" title="打卡美食"></a>打卡美食</h2><ul><li><input checked="" disabled="" type="checkbox"> 寿司：鱼心 - 心斋桥 </li><li><input checked="" disabled="" type="checkbox"> 海胆饭&#x2F;居酒屋：Unigoya Shibuya - 涉谷 需要提前预约 </li><li><input checked="" disabled="" type="checkbox"> 烤肉：白云台 - 大阪梅田 【随便找了家】 </li><li><input checked="" disabled="" type="checkbox"> 寿喜烧：今半本店 - 浅草 </li><li><input checked="" disabled="" type="checkbox"> 拉面 ： Men-ya Inoichi - 京都伏见稻荷 </li><li><input checked="" disabled="" type="checkbox"> 炸猪排：名代炸猪排 - 京都 </li><li><input checked="" disabled="" type="checkbox"> 大阪烧：福太郎 - 大阪梅田 </li><li><input disabled="" type="checkbox"> 炸物：元祖串炸 - 心斋桥</li></ul><hr><h2 id="日程规划"><a href="#日程规划" class="headerlink" title="日程规划"></a>日程规划</h2><h2 id="Day-1-「5月18日星期四」"><a href="#Day-1-「5月18日星期四」" class="headerlink" title="Day 1  「5月18日星期四」"></a>Day 1  <strong>「5月18日星期四」</strong></h2><blockquote><p>7:20 上海浦东T2<br>13:05 到达日本东京成田T1<br>当地购买suica卡<br>由于成田suica售尽，只能购买车票，浪费了点时间错过了去市区的电车等了1个小时 </p><p>下午：民宿放好行李<br>晚上：秋叶原 【Bic camera&#x2F;友都八喜 - 游戏人狂喜】<br>晚餐：寿喜烧<br>秋葉原駅的みんなの牛乳可以打卡一下</p></blockquote><h2 id="Day-2-「5月19日星期五」"><a href="#Day-2-「5月19日星期五」" class="headerlink" title="Day 2  「5月19日星期五」"></a>Day 2  <strong>「5月19日星期五」</strong></h2><blockquote><p>上午：浅草寺<br>打卡：御守、人型烧、草莓、炸肉饼(asakusamenchi)</p><p>下午：涩谷天空观景台SHIBUYA SKY涩谷天空<br>打卡：LUKE’s Lobster</p><p>晚上：东京塔<br>晚餐：海胆饭【Unigoya Shibuya - 涉谷 需要提前预约】</p></blockquote><h2 id="Day-3-「5月20日星期六」"><a href="#Day-3-「5月20日星期六」" class="headerlink" title="Day 3  「5月20日星期六」"></a>Day 3  <strong>「5月20日星期六」</strong></h2><blockquote><p>11:00 退房</p><p>下午坐新干线去大阪<br>通过人工窗口购买，如果有实体suica卡可以自助购买<br>找民宿放行李，大阪民宿离电车站有点远要走个10min</p><p>晚餐：寿司 【鱼心 - 心斋桥】<br>晚上：心斋桥</p></blockquote><h2 id="Day-4-「5月21日星期日」"><a href="#Day-4-「5月21日星期日」" class="headerlink" title="Day 4  「5月21日星期日」"></a>Day 4  <strong>「5月21日星期日」</strong></h2><blockquote><p>京都<br>由于每天爬的太累了，一般在10点左右起床<br>午饭：拉面【Men-ya Inoichi - 京都伏见稻荷】</p><p>中午：伏见稻荷<br>打卡：御守，鸟居，爬山<br>下午：清水寺&#x2F;二年坂三年坂</p><p>晚上：京都駅<br>晚餐：炸猪排【名代炸猪排 - 京都】</p></blockquote><h2 id="Day-5-「5月22日星期一」"><a href="#Day-5-「5月22日星期一」" class="headerlink" title="Day 5  「5月22日星期一」"></a>Day 5  <strong>「5月22日星期一」</strong></h2><blockquote><p>7:30-8:30环球影城<br>打卡项目：哈利波特、大白鲨、马里奥、蜘蛛侠、哆啦A梦、小黄人【就是园区里最热门的项目】<br>有快速通行建议可以先玩没有快速通行的项目，为了带朋友体验排队的乐趣，排完2个小时后心态炸裂<br>注意：需要绑定门票，抢马里奥园区的入场资格，快速通行会有一次入场资格。【有点蠢的是快速通行给的库霸王的挑战在中午，奇诺比奥餐厅预约在下午，错过了巡游，满满的遗憾】<br>晚上还下雨了！很气</p></blockquote><h2 id="Day-6-「5月23日星期二」"><a href="#Day-6-「5月23日星期二」" class="headerlink" title="Day 6  「5月23日星期二」"></a>Day 6  <strong>「5月23日星期二」</strong></h2><blockquote><p>大阪购物<br>主要之前几天都太特种兵了，所以这一天起床会比较晚，差不多12点吧<br>Bic Camera：购买游戏（不知道为啥去Bic的次数特别多，看完游戏看相机<br>午餐：烤肉 【白云台 - 大阪梅田】<br>大阪梅田 - 三大商圈<br>心斋桥 - 药妆</p></blockquote><h2 id="Day-7-「5月24日星期三」"><a href="#Day-7-「5月24日星期三」" class="headerlink" title="Day 7  「5月24日星期三」"></a>Day 7  <strong>「5月24日星期三」</strong></h2><blockquote><p>10:00 退房<br>寄存行李<br>午餐：大阪烧 - 高岛屋【福太郎 - 大阪梅田】</p><p>通天阁附近逛了一圈</p><p>18:00 关西机场T1<br>22:00 浦东机场T2，回家 （中国时间预计21点）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Travel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Travel </tag>
            
            <tag> Japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PowerShell Command Recording</title>
      <link href="/2024/05/09/PowerShell/"/>
      <url>/2024/05/09/PowerShell/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>ShortCut Keys in VSCode:</strong></p><ul><li><p><strong>Auto-adjust indent</strong><br> <code>Shift+Alt+F (Win)</code><br> <code>Shift+Option+F (Mac)</code></p></li><li><p><strong>Annotating</strong><br><code>Ctrl+/ (Win)</code></p></li></ul></blockquote><hr><h2 id="HashCode"><a href="#HashCode" class="headerlink" title="HashCode"></a>HashCode</h2><blockquote><ul><li><p><strong>Description:</strong><br>To get the specific file’s SHA256 automatically</p></li><li><p><strong>Syntax</strong></p></li></ul><pre><code class="powershell">  Get-FileHash &lt;Path&gt;  | fl  Get-FileHash &lt;Path&gt;  -Algorithm &lt;SHA256/MD5/…&gt;</code></pre><p><strong>More info:</strong> <a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-7.2">Microsoft-Get-FileHash</a></p></blockquote><h2 id="TryCatch"><a href="#TryCatch" class="headerlink" title="TryCatch"></a>TryCatch</h2><blockquote><ul><li><p><strong>Description:</strong><br>Make sure the script can output log.</p></li><li><p><strong>Syntax</strong></p></li></ul><pre><code class="powershell"> $ErrorMessage = $_.Exception.Message $FailIedItem = $_.Exception.ItemName $StackTrace = $_.Exception.StackTrace Write-Host &quot;Error: $ErrorMessage &quot; </code></pre><ul><li><strong>Example[Output]</strong><br>Error Message : Cannot find path ‘C:\Program Files’ because it does not exist.<br>Failed Item : C:\Program Files</li></ul><p><strong>More info:</strong> <a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_try_catch_finally?view=powershell-7.3">Microsoft-about_Try_Catch_Finally</a></p></blockquote><h2 id="Split-Path"><a href="#Split-Path" class="headerlink" title="Split-Path"></a>Split-Path</h2><blockquote><ul><li><p><strong>Description:</strong><br>To get the file name in the file’s path.</p></li><li><p><strong>Syntax</strong></p></li></ul><pre><code class="powershell">Split-Path -Path &lt;Path&gt; -Leaf</code></pre><ul><li><strong>Example[Output]</strong><br>Pass1.log<br>Pass2.log</li></ul><p><strong>More info:</strong> <a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/split-path?view=powershell-7.2">Microsoft-Split-Path</a></p></blockquote><h2 id="Start-process-Msiexec-exe"><a href="#Start-process-Msiexec-exe" class="headerlink" title="Start-process(Msiexec.exe)"></a>Start-process(Msiexec.exe)</h2><blockquote><ul><li><p><strong>Description:</strong><br>To start one or more processes on the local computer.</p></li><li><p><strong>Example[Command]</strong></p></li></ul><pre><code class="Powershell">Start-Process -PassThru -Wait MsiExec.exe  -ArgumentList &quot;/i $mPar /qn REBOOT=Suppress&quot;</code></pre><ul><li><strong>Example[Output]</strong></li></ul><pre><code class="plain">Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName-------  ------    -----      -----     ------     --  -- -----------      0       2      432       1852       0.00  45952   1 msiexec</code></pre><ul><li><strong>Syntax</strong></li></ul><pre><code class="powershell">Start-Process MsiExec.exe -ArgumentList &lt;Arg&gt; -Wait -PassThru</code></pre><p><strong>-PassThru</strong> is a parameter that returns an object that contains information about the new process<br><strong>-Wait</strong> is a parameter that waits for the new process to finish before continuing execution.</p><ul><li>&lt;arg&gt;Normal Parameters</li><li><strong>&#x2F;i</strong> is an option that installs a Windows Installer package.</li><li><strong>&#x2F;X</strong> is an option that unintalls a Windows Installer package.</li><li><strong>&#x2F;qn</strong> is an option that display no user interface during the installation process.</li><li><strong>REBOOT&#x3D;Suppress</strong> is a property that prevents the computer from restarting after the installation completes.</li></ul><p><strong>More info:</strong> <a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec">Microsoft-MsiExec</a><br><strong>More info:</strong> <a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/start-process?view=powershell-7.2">Microsoft-Start-Process</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Powershell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Powershell </tag>
            
            <tag> Command </tag>
            
            <tag> ShortCuts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SplunkForwarder pkg in macOS</title>
      <link href="/2024/05/09/SplunkForwarderpkg/"/>
      <url>/2024/05/09/SplunkForwarderpkg/</url>
      
        <content type="html"><![CDATA[<h1 id="SplunkForwarder-UF-Installation"><a href="#SplunkForwarder-UF-Installation" class="headerlink" title="SplunkForwarder UF Installation"></a>SplunkForwarder UF Installation</h1><blockquote><h3 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h3></blockquote><pre><code class="shell">#!/bin/bash#ArgumentlistSPLUNK_HOME=/opt/splunkforwarderSPLUNK_USER=splunker#SPLUNK_GRP=splunkerSPLUNK_BIN=$SPLUNK_HOME/binSPLUNK_VER=&quot;$SPLUNK_HOME/splunkforwarder-9*&quot;SPLUNK_UNIT_NAME=splunkCON_DIR=$SPLUNK_HOME/etc/appsCON_FOLDER=pwc-uf-mac-deploymentclient_silent=&quot;--accept-license --answer-yes --no-prompt&quot;SCRIPT_PATH=$(dirname &quot;$0&quot;)</code></pre><blockquote><h3 id="检测是否使用Root账号运行此脚本"><a href="#检测是否使用Root账号运行此脚本" class="headerlink" title="检测是否使用Root账号运行此脚本"></a>检测是否使用Root账号运行此脚本</h3></blockquote><pre><code class="shell"># Check for rootif [ &quot;$(id -u)&quot; != &quot;0&quot; ]; then    echo &quot;Relaunching this script as root user.&quot;    exec sudo &quot;$0&quot; &quot;$@&quot;fi</code></pre><blockquote><h3 id="检测设置路径下是否存在SplunkForwarder"><a href="#检测设置路径下是否存在SplunkForwarder" class="headerlink" title="检测设置路径下是否存在SplunkForwarder"></a>检测设置路径下是否存在SplunkForwarder</h3><ol><li>T：检测当前SplunkForwarder版本是否为目标版本<ol><li>T：替换配置文件，并重启服务splunk</li><li>F：暂停Service，覆盖安装，添加配置文件</li></ol></li><li>F：检测是否存在splunker用户，没有则进行添加；进行安装SplunkForwarder,替换配置文件后需要重启服务splunk</li></ol></blockquote><pre><code class="shell">if [ -d $SPLUNK_HOME ]; then    echo &quot;Splunkforwarder exists!&quot;    if ls $SPLUNK_VER 1&gt; /dev/null 2&gt;&amp;1; then        echo &quot;Splunkforwarder is the lastest.&quot;        if [ -d $CON_DIR/Backup ]; then            for dir in $CON_DIR/pwc*; do                dir_name=$(basename $&#123;dir&#125;)                if [[ &quot;$&#123;dir_name&#125;&quot; !=  $CON_FOLDER &amp;&amp; &quot;$&#123;dir_name&#125;&quot; != *cn ]]; then                        mv -f $CON_DIR/pwc* $CON_DIR/Backup                    echo &quot;Success to delete old configuration-pwc*&quot;                fi            done            #Replace configuration            cd $SCRIPT_PATH            sudo cp -r $CON_FOLDER $CON_DIR            echo &quot;Success to copy $CON_FOLDER!&quot;            RESTART_COMMNAD=&quot;$SPLUNK_BIN/splunk restart $_silent&quot;            CHECK_COMMAND=&quot;$SPLUNK_BIN/splunk status&quot;            while true; do                $&#123;RESTART_COMMNAD&#125;                sleep 10                if $&#123;CHECK_COMMAND&#125; | grep -q &quot;splunkd is running&quot; ; then                    echo &quot;Restart successfully&quot;                    break                else                    echo &quot;Fail to restart. Trying again.&quot;                fi            done            $SPLUNK_BIN/splunk restart $_silent            echo &quot;Success to restart splunk!&quot;        else            for dir in $CON_DIR/pwc*; do                dir_name=$(basename $&#123;dir&#125;)                if [[ &quot;$&#123;dir_name&#125;&quot; !=  $CON_FOLDER &amp;&amp; &quot;$&#123;dir_name&#125;&quot; != *cn ]]; then                    mkdir -p $CON_DIR/Backup                         mv -f $CON_DIR/pwc* $CON_DIR/Backup                    echo &quot;Success to delete old configuration-pwc*&quot;                fi            done            #Replace configuration            cd $SCRIPT_PATH            sudo cp -r $CON_FOLDER $CON_DIR            echo &quot;Success to copy $CON_FOLDER!&quot;            while true; do                $&#123;RESTART_COMMNAD&#125;                sleep 10                if $&#123;CHECK_COMMAND&#125; | grep -q &quot;splunkd is running&quot; ; then                    echo &quot;Restart successfully&quot;                    break                else                    echo &quot;Fail to restart. Trying again.&quot;                fi            done        fi    else        $SPLUNK_BIN/splunk stop        tar -xzf splunkforwarder-9.0.3-darwin-universal.tgz -C /opt        if [ -d $CON_DIR/Backup ]; then            for dir in $CON_DIR/pwc*; do                dir_name=$(basename $&#123;dir&#125;)                if [[ &quot;$&#123;dir_name&#125;&quot; !=  $CON_FOLDER &amp;&amp; &quot;$&#123;dir_name&#125;&quot; != *cn ]]; then                         mv -f $CON_DIR/pwc* $CON_DIR/Backup                    echo &quot;Success to delete old configuration-pwc*&quot;                fi            done            #Replace configuration            cd $SCRIPT_PATH            sudo cp -r $CON_FOLDER $CON_DIR            echo &quot;Success to copy $CON_FOLDER!&quot;            RESTART_COMMNAD=&quot;$SPLUNK_BIN/splunk restart $_silent&quot;            CHECK_COMMAND=&quot;$SPLUNK_BIN/splunk status&quot;            while true; do                $&#123;RESTART_COMMNAD&#125;                sleep 10                if $&#123;CHECK_COMMAND&#125; | grep -q &quot;splunkd is running&quot; ; then                    echo &quot;Restart successfully&quot;                    break                else                    echo &quot;Fail to restart. Trying again.&quot;                fi            done        else           for dir in $CON_DIR/pwc*; do                dir_name=$(basename $&#123;dir&#125;)                if [[ &quot;$&#123;dir_name&#125;&quot; !=  $CON_FOLDER &amp;&amp; &quot;$&#123;dir_name&#125;&quot; != *cn ]]; then                    mkdir -p $CON_DIR/Backup                         mv -f $CON_DIR/pwc* $CON_DIR/Backup                    echo &quot;Success to delete old configuration-pwc*&quot;                fi            done            #Replace configuration            cd $SCRIPT_PATH            sudo cp -r $CON_FOLDER $CON_DIR            echo &quot;Success to copy $CON_FOLDER!&quot;            RESTART_COMMNAD=&quot;$SPLUNK_BIN/splunk restart $_silent&quot;            CHECK_COMMAND=&quot;$SPLUNK_BIN/splunk status&quot;            while true; do                $&#123;RESTART_COMMNAD&#125;                sleep 10                if $&#123;CHECK_COMMAND&#125; | grep -q &quot;splunkd is running&quot; ; then                    echo &quot;Restart successfully&quot;                    break                else                    echo &quot;Fail to restart. Trying again.&quot;                fi            done        fi    fielse    # Does not exist. Then, Installation for splunk    cd $SCRIPT_PATH    tar -xzf splunkforwarder-9.0.3-darwin-universal.tgz -C /opt    if [ -d $SPLUNK_HOME ]; then        echo &quot;Success to install Splunk.&quot;        #Create a new folder for backup configuration        mkdir -p $CON_DIR/Backup        mv -f $CON_DIR/pwc* $CON_DIR/Backup        echo &quot;Success to delete old configuration-pwc*&quot;        #Replace configuration [pwc-uf-mac-deploymentclient]        cd $SCRIPT_PATH        sudo cp -r $CON_FOLDER $CON_DIR        echo &quot;Success to copy $CON_FOLDER!&quot;        # Change ownership of splunk        if ! id -u splunker &gt;/dev/null 2&gt;&amp;1; then            # Create user: splunker            sudo dscl . -create /Users/splunker            sudo dscl . -create /Users/splunker UserShell /bin/bash            sudo dscl . -create /Users/splunker RealName &quot;splunker&quot;            sudo dscl . -create /Users/splunker UniqueID &quot;9980&quot;            sudo dscl . -create /Users/splunker PrimaryGroupID &quot;9980&quot;            sudo dscl . -create /Users/splunker NFSHomeDirectory /Users/splunker            sudo mkdir /Users/splunker            sudo chown splunker:splunker /Users/splunker            # Create group: splunker            sudo dscl . -create /Groups/splunker            sudo dscl . -create /Groups/splunker RealName &quot;splunker&quot;            sudo dscl . -create /Groups/splunker gid &quot;9980&quot;            # Add user to group            sudo dseditgroup -o edit -a splunker -t user splunker        fi        sudo chown -R splunker:splunker $SPLUNK_HOME/        echo &quot;Change successfully&quot;        # Start Splunk as non-root SPLUNK_USER                        sudo -u splunker $SPLUNK_BIN/splunk start $_silent                        # ENABLE BOOT START SECTION        sudo -u splunker $SPLUNK_BIN/splunk enable boot-start        # Restarting Splunk...        sudo -u splunker $SPLUNK_BIN/splunk restart $_silent        echo &quot;restart successfully&quot;    fifi</code></pre>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> SplunkForwarder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SplunkForwarder Search Command</title>
      <link href="/2024/05/09/SplunkSearchCommand/"/>
      <url>/2024/05/09/SplunkSearchCommand/</url>
      
        <content type="html"><![CDATA[<h2 id="Find-something-in-Splunk"><a href="#Find-something-in-Splunk" class="headerlink" title="Find something in Splunk"></a>Find something in Splunk</h2><blockquote><p>Then how can we do the search thing?<br>First of all, we should find “Datasets” then Click “Click Table View”. Then we could see the data repository in Splunk. This time you can return the Search Page.<br>Choose the one you need, input the below content in your search bar.</p></blockquote><pre><code>index=&lt;your repository&gt;</code></pre><blockquote><p>You also could use * to match the most close one.<br>For example:</p></blockquote><pre><code>index=&quot;abc*&quot;</code></pre><blockquote><p>如果想要在搜索里进行筛选，需要在上面event查找到可用的field<br>Example in EVENT:</p></blockquote><pre><code>&#123; [-]   Tenant: DefaultTenant   category: AdvancedHunting-AlertEvidence   operationName: Publish   properties: &#123; [+]   &#125;   tenantId: abc123xxx   time: 2023-10-30T02:11:42.2937933Z&#125; </code></pre><blockquote><p>If you wanna find the category is AdvancedHunting-AlertEvidence, then should add one space and category&#x3D;”AdvancedHunting-AlertEvidence”.</p></blockquote><pre><code>index=&quot;abc*&quot; category=&quot;AdvancedHunting-AlertEvidence&quot;.</code></pre>]]></content>
      
      
      <categories>
          
          <category> SplunkForwarder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SplunkForwarder </tag>
            
            <tag> Search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/09/hello-world/"/>
      <url>/2024/05/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
